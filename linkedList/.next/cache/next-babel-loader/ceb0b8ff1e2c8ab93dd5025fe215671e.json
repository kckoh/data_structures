{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\n\nvar LinkedList =\n/*#__PURE__*/\nfunction () {\n  function LinkedList(node) {\n    _classCallCheck(this, LinkedList);\n\n    this.value = node;\n    this.next = null;\n  }\n\n  _createClass(LinkedList, [{\n    key: \"addNode\",\n    value: function addNode(node) {\n      //recursive way to addNode\n      if (this.next != null) {\n        this.next.addNode(node);\n      } else {\n        this.next = new LinkedList(node);\n      }\n    }\n  }, {\n    key: \"deleteNode\",\n    value: function deleteNode(head, target) {\n      var headCopy = head;\n      if (je) while (headCopy.next != null) {\n        if (headCopy.value == target) {}\n      }\n    }\n  }, {\n    key: \"transverse\",\n    value: function transverse() {\n      var array = [];\n      array.push(this.value);\n      var copyNext = this.next;\n\n      while (copyNext != null) {\n        array.push(copyNext.value);\n        copyNext = copyNext.next;\n      }\n\n      console.log(array);\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nexport default LinkedList;","map":{"version":3,"sources":["/workspace/data_structures/linkedList/components/linkedList.js"],"names":["LinkedList","node","value","next","addNode","head","target","headCopy","je","array","push","copyNext","console","log"],"mappings":";;;IAAMA,U;;;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,IAAL,GAAY,IAAZ;AACD;;;;4BAEOF,I,EAAK;AACT;AACF,UAAG,KAAKE,IAAL,IAAY,IAAf,EAAoB;AAChB,aAAKA,IAAL,CAAUC,OAAV,CAAkBH,IAAlB;AACH,OAFD,MAGI;AACA,aAAKE,IAAL,GAAY,IAAIH,UAAJ,CAAeC,IAAf,CAAZ;AACH;AAEF;;;+BAEUI,I,EAAKC,M,EAAO;AACrB,UAAIC,QAAQ,GAAGF,IAAf;AACA,UAAIG,EAAJ,EACA,OAAMD,QAAQ,CAACJ,IAAT,IAAiB,IAAvB,EAA4B;AACxB,YAAGI,QAAQ,CAACL,KAAT,IAAkBI,MAArB,EAA4B,CAE3B;AACJ;AAEF;;;iCACW;AACV,UAAIG,KAAK,GAAE,EAAX;AACAA,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAKR,KAAhB;AACA,UAAIS,QAAQ,GAAG,KAAKR,IAApB;;AACA,aAAMQ,QAAQ,IAAG,IAAjB,EAAsB;AAClBF,QAAAA,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACT,KAApB;AACAS,QAAAA,QAAQ,GAAGA,QAAQ,CAACR,IAApB;AACH;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;;;;;;AAGH,eAAeT,UAAf","sourcesContent":["class LinkedList {\n  constructor(node) {\n    this.value = node\n    this.next = null\n  }\n\n  addNode(node){\n      //recursive way to addNode\n    if(this.next !=null){\n        this.next.addNode(node)\n    }\n    else{\n        this.next = new LinkedList(node)\n    }\n    \n  }\n\n  deleteNode(head,target){\n    var headCopy = head\n    if (je)\n    while(headCopy.next != null){\n        if(headCopy.value == target){\n\n        }\n    }\n\n  }\n  transverse(){\n    var array =[]\n    array.push(this.value)\n    var copyNext = this.next\n    while(copyNext !=null){\n        array.push(copyNext.value)\n        copyNext = copyNext.next\n    }\n    console.log(array)\n  }\n}\n\nexport default LinkedList;"]},"metadata":{},"sourceType":"module"}